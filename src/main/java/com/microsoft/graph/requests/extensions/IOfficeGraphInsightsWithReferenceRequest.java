// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.OfficeGraphInsights;
import com.microsoft.graph.requests.extensions.ISharedInsightCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISharedInsightRequestBuilder;
import com.microsoft.graph.requests.extensions.ITrendingCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ITrendingRequestBuilder;
import com.microsoft.graph.requests.extensions.IUsedInsightCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IUsedInsightRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.models.extensions.OfficeGraphInsights;
import com.microsoft.graph.http.IHttpRequest;
import com.microsoft.graph.serializer.IJsonBackedObject;


// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Office Graph Insights With Reference Request.
 */
public interface IOfficeGraphInsightsWithReferenceRequest extends IHttpRequest {

    void post(final OfficeGraphInsights newOfficeGraphInsights, final IJsonBackedObject payload, final ICallback<? super OfficeGraphInsights> callback);

    OfficeGraphInsights post(final OfficeGraphInsights newOfficeGraphInsights, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<? super OfficeGraphInsights> callback);

    OfficeGraphInsights get() throws ClientException;

	void delete(final ICallback<? super OfficeGraphInsights> callback);

	void delete() throws ClientException;

	void patch(final OfficeGraphInsights sourceOfficeGraphInsights, final ICallback<? super OfficeGraphInsights> callback);

	OfficeGraphInsights patch(final OfficeGraphInsights sourceOfficeGraphInsights) throws ClientException;

    IOfficeGraphInsightsWithReferenceRequest select(final String value);

    IOfficeGraphInsightsWithReferenceRequest expand(final String value);

}
