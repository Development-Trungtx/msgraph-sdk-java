// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DirectoryObject;
import com.microsoft.graph.models.extensions.ExtensionProperty;
import java.util.Arrays;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Directory Object Request Builder.
 */
public interface IDirectoryObjectRequestBuilder extends IRequestBuilder {
    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IDirectoryObjectRequest instance
     */
    IDirectoryObjectRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions);

    /**
     * Creates the request with specific options instead of the existing options
     *
     * @param requestOptions the options for this request
     * @return the IDirectoryObjectRequest instance
     */
    IDirectoryObjectRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions);


    IDirectoryObjectCheckMemberGroupsCollectionRequestBuilder checkMemberGroups(final java.util.List<String> groupIds);

    IDirectoryObjectCheckMemberObjectsCollectionRequestBuilder checkMemberObjects(final java.util.List<String> ids);

    IDirectoryObjectGetMemberGroupsCollectionRequestBuilder getMemberGroups(final Boolean securityEnabledOnly);

    IDirectoryObjectGetMemberObjectsCollectionRequestBuilder getMemberObjects(final Boolean securityEnabledOnly);
    IDirectoryObjectRestoreRequestBuilder restore();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the User type
     */
    IUserRequestBuilder castToUser();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the AppRoleAssignment type
     */
    IAppRoleAssignmentRequestBuilder castToAppRoleAssignment();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Application type
     */
    IApplicationRequestBuilder castToApplication();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ExtensionProperty type
     */
    IExtensionPropertyRequestBuilder castToExtensionProperty();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the PolicyBase type
     */
    IPolicyBaseRequestBuilder castToPolicyBase();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the AdministrativeUnit type
     */
    IAdministrativeUnitRequestBuilder castToAdministrativeUnit();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Contract type
     */
    IContractRequestBuilder castToContract();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Device type
     */
    IDeviceRequestBuilder castToDevice();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the DirectoryObjectPartnerReference type
     */
    IDirectoryObjectPartnerReferenceRequestBuilder castToDirectoryObjectPartnerReference();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the DirectoryRole type
     */
    IDirectoryRoleRequestBuilder castToDirectoryRole();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the DirectoryRoleTemplate type
     */
    IDirectoryRoleTemplateRequestBuilder castToDirectoryRoleTemplate();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Endpoint type
     */
    IEndpointRequestBuilder castToEndpoint();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Group type
     */
    IGroupRequestBuilder castToGroup();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the GroupSettingTemplate type
     */
    IGroupSettingTemplateRequestBuilder castToGroupSettingTemplate();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the Organization type
     */
    IOrganizationRequestBuilder castToOrganization();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the OrgContact type
     */
    IOrgContactRequestBuilder castToOrgContact();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ServicePrincipal type
     */
    IServicePrincipalRequestBuilder castToServicePrincipal();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the StsPolicy type
     */
    IStsPolicyRequestBuilder castToStsPolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the PermissionGrantPolicy type
     */
    IPermissionGrantPolicyRequestBuilder castToPermissionGrantPolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the IdentitySecurityDefaultsEnforcementPolicy type
     */
    IIdentitySecurityDefaultsEnforcementPolicyRequestBuilder castToIdentitySecurityDefaultsEnforcementPolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the HomeRealmDiscoveryPolicy type
     */
    IHomeRealmDiscoveryPolicyRequestBuilder castToHomeRealmDiscoveryPolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the TokenIssuancePolicy type
     */
    ITokenIssuancePolicyRequestBuilder castToTokenIssuancePolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the TokenLifetimePolicy type
     */
    ITokenLifetimePolicyRequestBuilder castToTokenLifetimePolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ActivityBasedTimeoutPolicy type
     */
    IActivityBasedTimeoutPolicyRequestBuilder castToActivityBasedTimeoutPolicy();

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ClaimsMappingPolicy type
     */
    IClaimsMappingPolicyRequestBuilder castToClaimsMappingPolicy();

}