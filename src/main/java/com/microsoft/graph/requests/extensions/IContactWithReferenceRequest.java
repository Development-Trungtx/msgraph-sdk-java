// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.Contact;
import com.microsoft.graph.requests.extensions.IExtensionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IExtensionRequestBuilder;
import com.microsoft.graph.requests.extensions.IMultiValueLegacyExtendedPropertyCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IMultiValueLegacyExtendedPropertyRequestBuilder;
import com.microsoft.graph.requests.extensions.ISingleValueLegacyExtendedPropertyCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ISingleValueLegacyExtendedPropertyRequestBuilder;
import com.microsoft.graph.requests.extensions.IProfilePhotoRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.models.extensions.Contact;
import com.microsoft.graph.http.IHttpRequest;
import com.microsoft.graph.serializer.IJsonBackedObject;


// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Contact With Reference Request.
 */
public interface IContactWithReferenceRequest extends IHttpRequest {

    void post(final Contact newContact, final IJsonBackedObject payload, final ICallback<? super Contact> callback);

    Contact post(final Contact newContact, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<? super Contact> callback);

    Contact get() throws ClientException;

	void delete(final ICallback<? super Contact> callback);

	void delete() throws ClientException;

	void patch(final Contact sourceContact, final ICallback<? super Contact> callback);

	Contact patch(final Contact sourceContact) throws ClientException;

    IContactWithReferenceRequest select(final String value);

    IContactWithReferenceRequest expand(final String value);

}
