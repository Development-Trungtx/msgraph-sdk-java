// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.PolicyBase;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.requests.extensions.IPolicyBaseCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IPolicyBaseRequestBuilder;
import com.microsoft.graph.requests.extensions.IPolicyBaseCollectionRequest;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.core.IBaseClient;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Policy Base Collection Request Builder.
 */
public class PolicyBaseCollectionRequestBuilder extends BaseRequestBuilder implements IPolicyBaseCollectionRequestBuilder {

    /**
     * The request builder for this collection of PolicyBase
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public PolicyBaseCollectionRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IUserRequest instance
     */
    public IPolicyBaseCollectionRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the IUserRequest instance
     */
    public IPolicyBaseCollectionRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new PolicyBaseCollectionRequest(getRequestUrl(), getClient(), requestOptions);
    }

    public IPolicyBaseRequestBuilder byId(final String id) {
        return new PolicyBaseRequestBuilder(getRequestUrlWithAdditionalSegment(id), getClient(), getOptions());
    }



    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the StsPolicy type
     */
    public IStsPolicyCollectionRequestBuilder castToStsPolicy() {
        return new StsPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.stsPolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the PermissionGrantPolicy type
     */
    public IPermissionGrantPolicyCollectionRequestBuilder castToPermissionGrantPolicy() {
        return new PermissionGrantPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.permissionGrantPolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the IdentitySecurityDefaultsEnforcementPolicy type
     */
    public IIdentitySecurityDefaultsEnforcementPolicyCollectionRequestBuilder castToIdentitySecurityDefaultsEnforcementPolicy() {
        return new IdentitySecurityDefaultsEnforcementPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.identitySecurityDefaultsEnforcementPolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the HomeRealmDiscoveryPolicy type
     */
    public IHomeRealmDiscoveryPolicyCollectionRequestBuilder castToHomeRealmDiscoveryPolicy() {
        return new HomeRealmDiscoveryPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.homeRealmDiscoveryPolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the TokenIssuancePolicy type
     */
    public ITokenIssuancePolicyCollectionRequestBuilder castToTokenIssuancePolicy() {
        return new TokenIssuancePolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.tokenIssuancePolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the TokenLifetimePolicy type
     */
    public ITokenLifetimePolicyCollectionRequestBuilder castToTokenLifetimePolicy() {
        return new TokenLifetimePolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.tokenLifetimePolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ActivityBasedTimeoutPolicy type
     */
    public IActivityBasedTimeoutPolicyCollectionRequestBuilder castToActivityBasedTimeoutPolicy() {
        return new ActivityBasedTimeoutPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.activityBasedTimeoutPolicy"), getClient(), null);
    }

    /**
     * Performs an OData cast on the entity
     *
     * @return the entity cast to the ClaimsMappingPolicy type
     */
    public IClaimsMappingPolicyCollectionRequestBuilder castToClaimsMappingPolicy() {
        return new ClaimsMappingPolicyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.claimsMappingPolicy"), getClient(), null);
    }
}
