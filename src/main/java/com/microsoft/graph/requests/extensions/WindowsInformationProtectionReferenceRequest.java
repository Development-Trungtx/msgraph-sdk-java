// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.WindowsInformationProtection;
import com.microsoft.graph.models.extensions.TargetedManagedAppPolicyAssignment;
import com.microsoft.graph.requests.extensions.ITargetedManagedAppPolicyAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ITargetedManagedAppPolicyAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.TargetedManagedAppPolicyAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.TargetedManagedAppPolicyAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.IWindowsInformationProtectionAppLockerFileCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IWindowsInformationProtectionAppLockerFileRequestBuilder;
import com.microsoft.graph.requests.extensions.WindowsInformationProtectionAppLockerFileCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.WindowsInformationProtectionAppLockerFileRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.options.QueryOption;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;
import com.microsoft.graph.core.IBaseClient;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Windows Information Protection Reference Request.
 */
public class WindowsInformationProtectionReferenceRequest extends BaseRequest implements IWindowsInformationProtectionReferenceRequest {

    /**
     * The request for the WindowsInformationProtection
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public WindowsInformationProtectionReferenceRequest(String requestUrl, IBaseClient client, java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, WindowsInformationProtection.class);
    }

    public void delete(final ICallback<? super WindowsInformationProtection> callback) {
        send(HttpMethod.DELETE, callback, null);
    }

    public WindowsInformationProtection delete() throws ClientException {
       return send(HttpMethod.DELETE, null);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    public IWindowsInformationProtectionReferenceRequest select(final String value) {
        getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$select", value));
        return (WindowsInformationProtectionReferenceRequest)this;
    }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    public IWindowsInformationProtectionReferenceRequest expand(final String value) {
        getQueryOptions().add(new com.microsoft.graph.options.QueryOption("$expand", value));
        return (WindowsInformationProtectionReferenceRequest)this;
    }
    /**
     * Puts the WindowsInformationProtection
     *
     * @param srcWindowsInformationProtection the WindowsInformationProtection reference to PUT
     * @param callback the callback to be called after success or failure
     */
    public void put(WindowsInformationProtection srcWindowsInformationProtection, final ICallback<? super WindowsInformationProtection> callback) {
        send(HttpMethod.PUT, callback, srcWindowsInformationProtection);
    }

    /**
     * Puts the WindowsInformationProtection
     *
     * @param srcWindowsInformationProtection the WindowsInformationProtection reference to PUT
     * @return the WindowsInformationProtection
     * @throws ClientException an exception occurs if there was an error while the request was sent
     */
    public WindowsInformationProtection put(WindowsInformationProtection srcWindowsInformationProtection) throws ClientException {
        return send(HttpMethod.PUT, srcWindowsInformationProtection);
    }
}
