// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.callrecords.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.callrecords.models.extensions.CallRecord;
import com.microsoft.graph.callrecords.requests.extensions.ISessionCollectionRequestBuilder;
import com.microsoft.graph.callrecords.requests.extensions.ISessionRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.callrecords.models.extensions.CallRecord;
import com.microsoft.graph.http.IHttpRequest;
import com.microsoft.graph.serializer.IJsonBackedObject;


// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Call Record With Reference Request.
 */
public interface ICallRecordWithReferenceRequest extends IHttpRequest {

    void post(final CallRecord newCallRecord, final IJsonBackedObject payload, final ICallback<? super CallRecord> callback);

    CallRecord post(final CallRecord newCallRecord, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<? super CallRecord> callback);

    CallRecord get() throws ClientException;

	void delete(final ICallback<? super CallRecord> callback);

	void delete() throws ClientException;

	void patch(final CallRecord sourceCallRecord, final ICallback<? super CallRecord> callback);

	CallRecord patch(final CallRecord sourceCallRecord) throws ClientException;

    ICallRecordWithReferenceRequest select(final String value);

    ICallRecordWithReferenceRequest expand(final String value);

}
